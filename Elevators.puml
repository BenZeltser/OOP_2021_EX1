@startuml
'https://plantuml.com/class-diagram

class Elevator {
    upCalls = []
    downCalls = []
    list_of_calls = []
    __init__(self, _id, _speed, _minFloor, _maxFloor, _closeTime, _openTime, _startTime, _stopTime)
    addCall(self)
    removeCall(self)
    getCallType(self)
    getUpCall(self)
    getDownCall(self)
    getID(self)
    getSpeed(self)
    getMinFloor(self)
    getMaxFloor(self)
    getCloseTime(self)
    getOpenTime(self)
    getStartTime(self)
    getStopTime(self)
    getState(self)
    calculateTime(self, dif)
    getPos(self)
    get_dest(self)
    goto(self,floor)



}

class Building {
list : elevators[]
__init__(self, minFloor,maxFloor,elevators)
}

class ElevatorAlgo {


}



class ElevatorCall {
class CallForElevator
__init__(self,Callname, time, SRC, DST)
addTime(self,newTime)
get_SRC(self)
get_DST(self)
getType(self)
isDone(self,floor)
setElevator(self,ele)
}



enum Elevator_Status {
    ERROR = -2
    DOWN = -1
    LEVEL = 0
    UP = 1
    OPEN = 1
    CLOSE = 0
}

enum Elevator_Call_status {
    INIT = 0
    GOING2SRC = 1
    GOING2DEST = 2
    DONE = 3
    UP = 1
    DOWN = -1
}


class main {
    #Get Json files
    #Get CSV files
    #Iterate through calls
    #Select an Elevator accordingly
    #Output a an 'output.csv' file

}

header Python OOP Project Diagram -  EX1 - 2021
Elevator_Status --|> Elevator
Elevator_Call_status --|> ElevatorCall
ElevatorCall->ElevatorAlgo : allocate an elevator to the call
Building --> Elevator
ElevatorAlgo->Elevator: Select an elevator to oblige the call
main --|> ElevatorAlgo
@enduml